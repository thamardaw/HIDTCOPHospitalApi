"""28_5_2022_added_inventory

Revision ID: a0f77459f976
Revises: a3b374b377db
Create Date: 2022-05-28 11:12:14.353092

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a0f77459f976'
down_revision = 'a3b374b377db'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transactiontype',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('issue', 'receive', name='type_enum'), nullable=False),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactiontype_id'), 'transactiontype', ['id'], unique=False)
    op.create_table('pharmacyitem',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('brand_name', sa.String(), nullable=False),
    sa.Column('generic_name', sa.String(), nullable=False),
    sa.Column('form', sa.String(), nullable=True),
    sa.Column('strength', sa.String(), nullable=True),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('po_unit', sa.String(), nullable=True),
    sa.Column('converstion_rate', sa.Integer(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['created_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pharmacyitem_id'), 'pharmacyitem', ['id'], unique=False)
    op.create_table('inventoryitem',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('pharmacy_item_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('balance', sa.Integer(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('purchasing_price', sa.Integer(), nullable=False),
    sa.Column('sales_service_item_id', sa.Integer(), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('batch', sa.String(), nullable=False),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_item_id'], ['pharmacyitem.id'], ),
    sa.ForeignKeyConstraint(['sales_service_item_id'], ['salesserviceitem.id'], ),
    sa.ForeignKeyConstraint(['updated_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inventoryitem_id'), 'inventoryitem', ['id'], unique=False)
    op.create_table('inventorytransaction',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('inventory_item_id', sa.Integer(), nullable=True),
    sa.Column('inventory_item_name', sa.String(), nullable=False),
    sa.Column('transaction_type_name', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('purchasing_price', sa.Integer(), nullable=False),
    sa.Column('selling_price', sa.Integer(), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventoryitem.id'], ),
    sa.ForeignKeyConstraint(['updated_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inventorytransaction_id'), 'inventorytransaction', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_inventorytransaction_id'), table_name='inventorytransaction')
    op.drop_table('inventorytransaction')
    op.drop_index(op.f('ix_inventoryitem_id'), table_name='inventoryitem')
    op.drop_table('inventoryitem')
    op.drop_index(op.f('ix_pharmacyitem_id'), table_name='pharmacyitem')
    op.drop_table('pharmacyitem')
    op.drop_index(op.f('ix_transactiontype_id'), table_name='transactiontype')
    op.drop_table('transactiontype')
    # ### end Alembic commands ###
